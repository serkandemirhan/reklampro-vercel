-- Supabase schema updates for süreç ve makine yönetimi ekranı
-- Bu script uygulamanın yeni arayüzü için gerekli alanları ve tabloları ekler.

-- 1) process_templates tablosu: yeni boolean alanlar ve sıralama
ALTER TABLE process_templates
  ADD COLUMN IF NOT EXISTS is_parallel BOOLEAN NOT NULL DEFAULT FALSE,
  ADD COLUMN IF NOT EXISTS is_machine_based BOOLEAN NOT NULL DEFAULT FALSE,
  ADD COLUMN IF NOT EXISTS is_production BOOLEAN NOT NULL DEFAULT FALSE,
  ADD COLUMN IF NOT EXISTS order_index INTEGER;

UPDATE process_templates
SET order_index = COALESCE(order_index, id)
WHERE order_index IS NULL;

-- 2) machines tablosu
CREATE TABLE IF NOT EXISTS machines (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tenant_id BIGINT NOT NULL REFERENCES tenants(id) ON DELETE CASCADE,
  name TEXT NOT NULL,
  process_id BIGINT REFERENCES process_templates(id) ON DELETE SET NULL,
  status TEXT NOT NULL DEFAULT 'active' CHECK (status IN ('active', 'maintenance', 'inactive')),
  note TEXT,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

ALTER TABLE machines
  ADD COLUMN IF NOT EXISTS order_index INTEGER DEFAULT 0,
  ADD COLUMN IF NOT EXISTS current_step_id BIGINT REFERENCES step_instances(id) ON DELETE SET NULL;

CREATE INDEX IF NOT EXISTS machines_tenant_idx ON machines(tenant_id);
CREATE INDEX IF NOT EXISTS machines_process_idx ON machines(process_id);

-- 3) machines.updated_at tetikleyicisi
CREATE OR REPLACE FUNCTION set_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS machines_set_updated_at ON machines;
CREATE TRIGGER machines_set_updated_at
  BEFORE UPDATE ON machines
  FOR EACH ROW
  EXECUTE FUNCTION set_updated_at();

-- 4) Rol tablosu için örnek veri (opsiyonel)
-- INSERT INTO workflow_roles (tenant_id, name) VALUES (1, 'Baskı Operatörü');
